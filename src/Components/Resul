import { useLocation } from 'react-router-dom';

const Result = () => {
  const location = useLocation();
  const resultData = location.state;
  
  if (!resultData) {
    return (
      <div className="min-h-screen bg-gray-100 flex items-center justify-center p-4">
        <div className="bg-white rounded-lg shadow-lg p-8 w-full max-w-2xl text-center">
          <h1 className="text-3xl font-bold text-gray-800 mb-6">No Results Found</h1>
          <p className="text-lg text-gray-600 mb-6">
            You haven't taken the test yet. Please complete the test to see your results.
          </p>
        </div>
      </div>
    );
  }

  const percentage = (resultData.score / resultData.totalQuestions * 100).toFixed(1);

  return (
    <div className="min-h-screen bg-gray-100 flex items-center justify-center p-4">
      <div className="bg-white rounded-lg shadow-lg p-8 w-full max-w-4xl">
        <h1 className="text-3xl font-bold text-gray-800 mb-6 text-center">Test Results</h1>
        
        {/* Summary Section */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
          <div className="bg-blue-50 p-4 rounded-lg text-center">
            <h3 className="text-lg font-semibold text-blue-800">Questions Answered</h3>
            <p className="text-2xl font-bold text-blue-600">
              {resultData.answeredQuestions}/{resultData.totalQuestions}
            </p>
          </div>
          <div className="bg-green-50 p-4 rounded-lg text-center">
            <h3 className="text-lg font-semibold text-green-800">Score</h3>
            <p className="text-2xl font-bold text-green-600">
              {resultData.score}/{resultData.totalQuestions}
            </p>
          </div>
          <div className="bg-purple-50 p-4 rounded-lg text-center">
            <h3 className="text-lg font-semibold text-purple-800">Percentage</h3>
            <p className="text-2xl font-bold text-purple-600">
              {percentage}%
            </p>
          </div>
        </div>

        {/* Time Spent */}
        <div className="mb-6 text-center">
          <p className="text-gray-600">
            Time spent: <span className="font-semibold">{resultData.timeSpent}</span>
          </p>
        </div>

        {/* Detailed Results */}
        <div className="mt-6">
          <h3 className="text-xl font-semibold mb-4 text-center">Detailed Results</h3>
          <div className="max-h-96 overflow-y-auto">
            {resultData.questions.map((question, index) => (
              <div key={question.id} className="mb-4 p-3 border rounded-lg">
                <p className="font-medium">{index + 1}. {question.text}</p>
                {question.userAnswer ? (
                  <>
                    <p className={`mt-1 ${question.isCorrect ? 'text-green-600' : 'text-red-600'}`}>
                      Your answer: {question.userAnswer}
                    </p>
                    {!question.isCorrect && (
                      <p className="text-blue-600">Correct answer: {question.answer}</p>
                    )}
                  </>
                ) : (
                  <p className="text-yellow-600 mt-1">Not answered</p>
                )}
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Result;